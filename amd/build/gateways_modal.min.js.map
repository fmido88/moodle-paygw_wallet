{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module gateway_modal\n *\n * @module     paygw_wallet/gateway_modal\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Selectors from \"core_payment/selectors\";\nimport $ from 'jquery';\nimport {getString} from 'core/str';\nimport Ajax from 'core/ajax';\n\nconst walletComponents = ['enrol_wallet', 'auth_wallet', 'availability_wallet'];\n\n/**\n *\n * @param {string} component\n * @param {string} paymentArea\n * @param {integer} itemId\n * @param {string} description\n * @returns {string}\n */\nexport const process = async(component, paymentArea, itemId, description) => {\n    if (walletComponents.includes(component)) {\n        removeWallet();\n        throw new Error(await getString('walletnotforwallet', 'paygw_wallet'));\n    }\n\n    let result = await processPayment(component, paymentArea, itemId, description);\n\n    if (!result.success) {\n        throw new Error(result.reason);\n    }\n\n    let returnStr = await getString('paymentsuccessfull', 'paygw_wallet', result.url);\n\n    window.location.href = result.url;\n    return returnStr;\n};\n\n/**\n * Process The payment.\n * @param {string} component\n * @param {string} paymentArea\n * @param {integer} itemId\n * @param {string} description\n * @returns {Object}\n */\nasync function processPayment(component, paymentArea, itemId, description)  {\n    let requests = Ajax.call([{\n        methodname: 'paygw_wallet_process',\n        args: {\n            component: component,\n            paymentarea: paymentArea,\n            itemid: itemId,\n            description: description,\n        }\n    }]);\n    let response = await requests[0];\n    return response;\n}\n\n/**\n * Try to remove the wallet option.\n */\nfunction removeWallet() {\n    let walletGateway = $(Selectors.regions.gatewaysContainer + ' div.form-check.wallet');\n    walletGateway.remove();\n}\n"],"names":["walletComponents","async","component","paymentArea","itemId","description","includes","Selectors","regions","gatewaysContainer","remove","Error","result","requests","Ajax","call","methodname","args","paymentarea","itemid","processPayment","success","reason","returnStr","url","window","location","href"],"mappings":";;;;;;;qNA4BMA,iBAAmB,CAAC,eAAgB,cAAe,wCAUlCC,MAAMC,UAAWC,YAAaC,OAAQC,kBACrDL,iBAAiBM,SAASJ,iBA2CV,mBAAEK,mBAAUC,QAAQC,kBAAoB,0BAC9CC,SA1CJ,IAAIC,YAAY,kBAAU,qBAAsB,qBAGtDC,4BAoBsBV,UAAWC,YAAaC,OAAQC,iBACtDQ,SAAWC,cAAKC,KAAK,CAAC,CACtBC,WAAY,uBACZC,KAAM,CACFf,UAAWA,UACXgB,YAAaf,YACbgB,OAAQf,OACRC,YAAaA,6BAGAQ,SAAS,GA9BXO,CAAelB,UAAWC,YAAaC,OAAQC,iBAE7DO,OAAOS,cACF,IAAIV,MAAMC,OAAOU,YAGvBC,gBAAkB,kBAAU,qBAAsB,eAAgBX,OAAOY,YAE7EC,OAAOC,SAASC,KAAOf,OAAOY,IACvBD"}